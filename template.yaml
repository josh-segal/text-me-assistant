AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 15
    MemorySize: 256
    Runtime: nodejs18.x

Parameters:
  OpenAiApiKey:
    Type: String
    NoEcho: true
    Description: OpenAI API Key
  TwilioAccountSid:
    Type: String
    NoEcho: true
    Description: Twilio Account SID
  TwilioAuthToken:
    Type: String
    NoEcho: true
    Description: Twilio Auth Token
  TwilioPhoneNumber:
    Type: String
    Description: Twilio Phone Number
  ManagerPhoneNumber:
    Type: String
    Description: Manager's Phone Number for Escalations
  SupabaseUrl: 
    Type: String
  SupabaseServiceRoleKey:
    Type: String
  TwilioMessagingServiceSid:
    Type: String
    Description: Twilio Messaging Service SID


Resources:
  # Application IAM Roles
  ApplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-application-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ApplicationAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-*
        - PolicyName: SNSPublishAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref EmployeeMessageTopic
                  - !Ref AssistantResponseTopic
                  - !Ref EscalationTopic
                  - !Ref ManagerResponseTopic

  MessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/message/
      Handler: index.handler
      Role: !GetAtt ApplicationRole.Arn
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAiApiKey
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          TWILIO_PHONE_NUMBER: !Ref TwilioPhoneNumber
          TWILIO_MESSAGING_SERVICE_SID: !Ref TwilioMessagingServiceSid
          SUPABASE_URL: !Ref SupabaseUrl
          SUPABASE_SERVICE_ROLE_KEY: !Ref SupabaseServiceRoleKey
          ESCALATION_PHONE_NUMBER: !Ref ManagerPhoneNumber
          EMPLOYEE_MESSAGE_TOPIC_ARN: !Ref EmployeeMessageTopic
          ASSISTANT_RESPONSE_TOPIC_ARN: !Ref AssistantResponseTopic
          ESCALATION_TOPIC_ARN: !Ref EscalationTopic
          MANAGER_RESPONSE_TOPIC_ARN: !Ref ManagerResponseTopic
      Events:
        MessageEvent:
          Type: Api
          Properties:
            Path: /message
            Method: post

  EscalateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/escalate/
      Handler: index.handler
      Role: !GetAtt ApplicationRole.Arn
      Environment:
        Variables:
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          TWILIO_PHONE_NUMBER: !Ref TwilioPhoneNumber
          TWILIO_MESSAGING_SERVICE_SID: !Ref TwilioMessagingServiceSid
          MANAGER_PHONE_NUMBER: !Ref ManagerPhoneNumber
      Events:
        EscalateEvent:
          Type: Api
          Properties:
            Path: /escalate
            Method: post

  # SNS Topics
  EmployeeMessageTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-employee-messages
      DisplayName: Employee Messages

  AssistantResponseTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-assistant-responses
      DisplayName: Assistant Responses

  EscalationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-escalations
      DisplayName: Message Escalations

  ManagerResponseTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-manager-responses
      DisplayName: Manager Responses

Outputs:
  ApplicationRoleArn:
    Description: "ARN of the application IAM role"
    Value: !GetAtt ApplicationRole.Arn
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"